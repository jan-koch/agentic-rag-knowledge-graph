version: '3.8'

# Test Environment Docker Compose
# Uses alternative ports to avoid conflicts with production databases
# PostgreSQL: 5433 (instead of 5432)
# Neo4j HTTP: 7475 (instead of 7474)
# Neo4j Bolt: 7688 (instead of 7687)

services:
  postgres:
    image: pgvector/pgvector:pg16
    container_name: agentic-rag-postgres-test
    environment:
      POSTGRES_DB: test_db
      POSTGRES_USER: test_user
      POSTGRES_PASSWORD: test_password
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "127.0.0.1:5433:5432"  # Map host port 5433 to container port 5432
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U test_user -d test_db || pg_isready -U test_user"]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  neo4j:
    image: neo4j:5.13
    container_name: agentic-rag-neo4j-test
    environment:
      NEO4J_AUTH: neo4j/test_password
      NEO4J_PLUGINS: '["apoc"]'
      NEO4J_dbms_security_procedures_unrestricted: "apoc.*"
      NEO4J_dbms_security_procedures_allowlist: "apoc.*"
    ports:
      - "127.0.0.1:7475:7474"  # Map host port 7475 to container port 7474 (HTTP)
      - "127.0.0.1:7688:7687"  # Map host port 7688 to container port 7687 (Bolt)
    volumes:
      - neo4j_test_data:/data
      - neo4j_test_logs:/logs
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "neo4j", "-p", "test_password", "RETURN 1"]
      interval: 10s
      timeout: 10s
      retries: 10
    restart: unless-stopped

volumes:
  postgres_test_data:
    driver: local
  neo4j_test_data:
    driver: local
  neo4j_test_logs:
    driver: local

networks:
  default:
    name: agentic-rag-test-network
